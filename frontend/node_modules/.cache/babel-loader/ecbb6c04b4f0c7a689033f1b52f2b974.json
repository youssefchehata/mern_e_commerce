{"ast":null,"code":"import * as A from '../constants/cartConstant';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case A.CART_ADD_ITEM:\n      const item = payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case A.CART_REMOVE_ITEM:\n      return {\n        loading: false,\n        products: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/youssef/Documents/workSpace/mern_e_commerce/frontend/src/store/reducers/cartReducers.js"],"names":["A","cartReducer","state","cartItems","action","type","payload","CART_ADD_ITEM","item","existItem","find","x","product","map","CART_REMOVE_ITEM","loading","products"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,2BAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKL,CAAC,CAACO,aAAP;AACE,YAAMC,IAAI,GAAEF,OAAZ;AACA,YAAMG,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAcJ,IAAI,CAACI,OAA3C,CAAlB;;AACA,UAAGH,SAAH,EAAa;AACT,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCJ,IAAlC,GAAyCG,CAAhE;AAFP,SAAP;AAIH,OALD,MAKK;AACD,eAAM,EACF,GAAGT,KADD;AAEFC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAsBK,IAAtB;AAFR,SAAN;AAIH;;AAEH,SAAKR,CAAC,CAACc,gBAAP;AACE,aAAO;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,QAAQ,EAAEV;AAA5B,OAAP;;AAEF;AACE,aAAOJ,KAAP;AApBJ;AAsBD,CAxBM","sourcesContent":["import * as A from '../constants/cartConstant';\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case A.CART_ADD_ITEM:\n      const item =payload\n      const existItem = state.cartItems.find(x=>x.product === item.product)\n      if(existItem){\n          return {\n              ...state,\n              cartItems:state.cartItems.map(x=>x.product === existItem.product ? item : x)\n          }\n      }else{\n          return{\n              ...state,\n              cartItems:[...state.cartItems , item]\n          }\n      }\n\n    case A.CART_REMOVE_ITEM:\n      return { loading: false, products: payload };\n  \n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}
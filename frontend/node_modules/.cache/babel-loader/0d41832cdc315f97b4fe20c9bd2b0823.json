{"ast":null,"code":"import axios from 'axios';\nimport * as A from '../constants/userConstant';\nimport * as O from '../constants/orderConstant';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: A.USER_LOGIN_REQUEST\n    });\n    cORDER_LIST_MY_RESETRDER_LIST_MY_RESET;\n    dispatch({\n      type: A.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: A.USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userinfo');\n  dispatch({\n    type: A.USER_LOGOUT\n  });\n  dispatch({\n    type: A.USER_DETAILS_RESET\n  });\n  dispatch({\n    type: O.ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: A.USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: A.USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        Content_Type: 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: A.USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: A.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: A.USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Content_Type: 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: A.USER_DETAILS_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: A.USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Content_Type: 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: A.USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: A.USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: A.USER_LIST_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: A.USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/youssef/Documents/workSpace/mern_e_commerce/frontend/src/store/actions/userActions.js"],"names":["axios","A","O","login","email","password","dispatch","type","USER_LOGIN_REQUEST","cORDER_LIST_MY_RESETRDER_LIST_MY_RESET","USER_LOGIN_SUCCESS","payload","data","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAIL","response","message","logout","removeItem","USER_LOGOUT","USER_DETAILS_RESET","ORDER_LIST_MY_RESET","USER_LIST_RESET","register","name","USER_REGISTER_REQUEST","config","headers","Content_Type","post","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","getUserDetails","id","getState","USER_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","get","USER_DETAILS_SUCCESS","updateUserProfile","user","USER_UPDATE_PROFILE_REQUEST","put","USER_UPDATE_PROFILE_SUCCESS","listUsers","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as A from '../constants/userConstant';\nimport * as O from '../constants/orderConstant';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: A.USER_LOGIN_REQUEST });\n    cORDER_LIST_MY_RESETRDER_LIST_MY_RESET\n    dispatch({ type: A.USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: A.USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userinfo');\n  dispatch({ type: A.USER_LOGOUT });\n  dispatch({ type: A.USER_DETAILS_RESET });\n  dispatch({ type: O.ORDER_LIST_MY_RESET });\n  dispatch({ type: A.USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: A.USER_REGISTER_REQUEST });\n    const config = { headers: { Content_Type: 'application/json' } };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch({ type: A.USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: A.USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: A.USER_DETAILS_REQUEST });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Content_Type: 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({ type: A.USER_DETAILS_SUCCESS, payload: data });\n\n    // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: A.USER_UPDATE_PROFILE_REQUEST });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Content_Type: 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({ type: A.USER_UPDATE_PROFILE_SUCCESS, payload: data });\n\n    // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: A.USER_LIST_REQUEST });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({ type: A.USER_LIST_SUCCESS, payload: data });\n\n    // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: A.USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport * as A from '../constants/userConstant';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: A.USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content_Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: A.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: A.USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userinfo');\n  dispatch({\n    type: A.USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: A.USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content_Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: A.USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: A.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: A.USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content_Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: A.USER_DETAILS_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: A.USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content_Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: A.USER_DETAILS_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/youssef/Documents/workSpace/mern_e_commerce/frontend/src/store/actions/userActions.js"],"names":["axios","A","login","email","password","dispatch","type","USER_LOGIN_REQUEST","config","headers","data","post","USER_LOGIN_SUCCESS","payload","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAIL","response","message","logout","removeItem","USER_LOGOUT","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","getUserDetails","id","getState","USER_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","get","USER_DETAILS_SUCCESS","updateUserProfile"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as A from '../constants/userConstant';\n\nexport const login = (email,password) => async (dispatch) => {\n  try {\n    dispatch({ type: A.USER_LOGIN_REQUEST });\n    const config = { headers:{ 'Content_Type':'application/json' } }\n\n    const { data } = await axios.post('/api/users/login',{email,password},config);\n\n    dispatch({ type: A.USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo',JSON.stringify(data))\n\n  } catch (error) {\n    dispatch({\n      type: A.USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = ()=>(dispatch)=>{\n  localStorage.removeItem('userinfo')\n  dispatch({type:A.USER_LOGOUT})\n\n}\n\n\nexport const register = (name,email,password) => async (dispatch) => {\n  try {\n    dispatch({ type: A.USER_REGISTER_REQUEST });\n    const config = { headers:{ 'Content_Type':'application/json' } }\n\n    const { data } = await axios.post('/api/users',{name,email,password},config);\n\n    dispatch({ type: A.USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: A.USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo',JSON.stringify(data))\n\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch,getState) => {\n  try {\n    dispatch({ type: A.USER_DETAILS_REQUEST });\n    const {userLogin:{userInfo}}=getState()\n\n    const config = { headers:{ \n      'Content_Type':'application/json' ,\n      Authorization:`Bearer ${userInfo.token}`\n      \n  } }\n    const { data } = await axios.get(`/api/users/${id}`,config);\n\n    dispatch({ type: A.USER_DETAILS_SUCCESS, payload: data });\n   \n\n    // localStorage.setItem('userInfo',JSON.stringify(data))\n\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (id) => async (dispatch,getState) => {\n  try {\n    dispatch({ type: A.USER_DETAILS_REQUEST });\n    const {userLogin:{userInfo}}=getState()\n\n    const config = { headers:{ \n      'Content_Type':'application/json' ,\n      Authorization:`Bearer ${userInfo.token}`\n      \n  } }\n    const { data } = await axios.get(`/api/users/${id}`,config);\n\n    dispatch({ type: A.USER_DETAILS_SUCCESS, payload: data });\n   \n\n    // localStorage.setItem('userInfo',JSON.stringify(data))\n\n  } catch (error) {\n    dispatch({\n      type: A.USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
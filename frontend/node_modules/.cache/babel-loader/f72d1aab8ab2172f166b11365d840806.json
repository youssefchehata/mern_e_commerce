{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer } from './reducers/productReducers';\nimport rootReducer from './reducers/rootReducer';\nconst reducer = rootReducer;\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  } //   authR: { authenticated: localStorage.getItem('token') },\n\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/youssef/Documents/workSpace/mern_e_commerce/frontend/src/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","rootReducer","reducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cart","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,kBAAR,QAAiC,4BAAjC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAKA,MAAMC,OAAO,GAAGD,WAAhB;AACA,MAAME,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EAA7G;AAIA,MAAMG,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAS,EAACP;AAAX,GADc,CAEnB;;AAFmB,CAArB;AAIA,MAAMQ,UAAU,GAAG,CAACb,KAAD,CAAnB;AACA,MAAMc,KAAK,GAAGjB,WAAW,CACrBO,OADqB,EAEvBM,YAFuB,EAGvBT,mBAAmB,CAACF,eAAe,CAAC,GAAGc,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {productListReducer} from './reducers/productReducers'\nimport rootReducer from './reducers/rootReducer';\n\n\n\n\nconst reducer = rootReducer\nconst cartItemsFromStorage = localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[]\n\n\n\nconst initialState = {\n  cart:{cartItems:cartItemsFromStorage}\n  //   authR: { authenticated: localStorage.getItem('token') },\n};\nconst middleware = [thunk];\nconst store = createStore(\n    reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
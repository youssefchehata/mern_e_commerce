{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/youssef/Documents/workSpace/mern_e_commerce/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from '../components/Loader';\nimport { Message } from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { register, getUserDetails } from '../store/actions/userActions';\n\nconst UserEditScreen = ({\n  location,\n  history,\n  match\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [isAdmin, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: name,\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: email,\n          placeholder: \"Enter Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/login?redirect=${redirect}` : `/login`,\n          children: \"Have an Account ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserEditScreen, \"ZxauvytCUSCVQK/uhONbXLiQpAI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/home/youssef/Documents/workSpace/mern_e_commerce/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","FormContainer","register","getUserDetails","UserEditScreen","location","history","match","userId","params","id","email","setEmail","name","setName","isAdmin","setPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","password","confirmPassword","target","value"],"mappings":"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","sourcesContent":["\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from '../components/Loader';\nimport { Message } from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { register,getUserDetails } from '../store/actions/userActions';\n\nconst UserEditScreen = ({location,history,match}) => {\n  const userId = match.params.id\n\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [isAdmin, setPassword] = useState('');\n \n  const [message, setMessage] = useState('');\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector(state=>state.userRegister)\n  const {loading, error , userInfo}= userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\nuseEffect(()=>{\nif(userInfo){\n    history.push(redirect)\n}\n},[history,userInfo,redirect])\n\n  const submitHandler = (e) => {\n  e.preventDefault()\n  if(password!== confirmPassword){\n      setMessage('Password do not match')\n  }else{\n        dispatch (register(name,email,password))\n  }\n\n\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message   >{message}</Message>}\n      {error && <Message   >{error}</Message>}\n      {loading && <Loader/>   }\n      <Form onSubmit={submitHandler}>\n\n      <Form.Group controlId='name'>\n          <Form.Label>name </Form.Label>\n          <Form.Control\n            type={name}\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type={email}\n            placeholder='Enter Email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n     \n\n        <Button type='submit' variant='primary'>\n          Update\n        </Button>\n      </Form>\n      <Row className='py-3'>\n        <Col>\n          <Link to={redirect ? `/login?redirect=${redirect}` : `/login`}>\n            Have an Account ?\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default UserEditScreen;\n\n"]},"metadata":{},"sourceType":"module"}
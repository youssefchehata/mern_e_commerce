{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/youssef/Documents/workSpace/mern_e_commerce/frontend/src/screens/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from '../components/Loader';\nimport { Message } from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { register, getUserDetails, updateUserProfile } from '../store/actions/userActions';\n\nconst Profile = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    succ\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: name,\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: email,\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: password,\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"confirmPassword \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: confirmPassword,\n            placeholder: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Profile, \"J3h7FWdUFwszG05AFY22Dtpjals=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/youssef/Documents/workSpace/mern_e_commerce/frontend/src/screens/Profile.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","FormContainer","register","getUserDetails","updateUserProfile","Profile","location","history","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","succ","push","submitHandler","e","preventDefault","id","_id","target","value"],"mappings":";;;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,QAAT,EAAkBC,cAAlB,EAAiCC,iBAAjC,QAA0D,8BAA1D;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,eAAD,EAAkBC,kBAAlB,IAAwCzB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM4B,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,QAAMsB,WAAW,GAAGrB,WAAW,CAACsB,KAAK,IAAEA,KAAK,CAACD,WAAd,CAA/B;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAkBC,IAAAA;AAAlB,MAAyBJ,WAA/B;AAGA,QAAMK,SAAS,GAAG1B,WAAW,CAACsB,KAAK,IAAEA,KAAK,CAACI,SAAd,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaD,SAAnB;AAEA,QAAME,iBAAiB,GAAG5B,WAAW,CAACsB,KAAK,IAAEA,KAAK,CAACM,iBAAd,CAArC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASD,iBAAf;AAGFnC,EAAAA,SAAS,CAAC,MAAI;AACd,QAAG,CAACkC,QAAJ,EAAa;AACTlB,MAAAA,OAAO,CAACqB,IAAR,CAAa,QAAb;AACH,KAFD,MAEK;AACD,UAAG,CAACL,IAAI,CAACb,IAAT,EAAc;AACZQ,QAAAA,QAAQ,CAACf,cAAc,CAAC,SAAD,CAAf,CAAR;AACD,OAFD,MAEK;AACJQ,QAAAA,OAAO,CAACY,IAAI,CAACb,IAAN,CAAP;AACAD,QAAAA,QAAQ,CAACc,IAAI,CAACf,KAAN,CAAR;AACA;AACJ;AAEA,GAZQ,EAYP,CAACU,QAAD,EAAUX,OAAV,EAAkBgB,IAAlB,CAZO,CAAT;;AAcE,QAAMM,aAAa,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGnB,QAAQ,KAAIE,eAAf,EAA+B;AAC3BG,MAAAA,UAAU,CAAC,uBAAD,CAAV;AACH,KAFD,MAEK;AACDC,MAAAA,QAAQ,CAACd,iBAAiB,CAAC;AACvB4B,QAAAA,EAAE,EAACT,IAAI,CAACU,GADe;AACXvB,QAAAA,IADW;AACNF,QAAAA,KADM;AACAI,QAAAA;AADA,OAAD,CAAlB,CAAR;AAGH;AAGA,GAXD;;AAaA,sBAAO,QAAC,GAAD;AAAA,4BACH,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECI,OAAO,iBAAI,QAAC,OAAD;AAAA,kBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,cAFZ,EAGCM,KAAK,iBAAI,QAAC,OAAD;AAAA,kBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,cAHV,EAICD,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJZ,eAKA,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEQ,aAAhB;AAAA,gCAEA,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAEnB,IADR;AAEE,YAAA,WAAW,EAAC,YAFd;AAGE,YAAA,KAAK,EAAEA,IAHT;AAIE,YAAA,QAAQ,EAAGoB,CAAD,IAAOnB,OAAO,CAACmB,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAE3B,KADR;AAEE,YAAA,WAAW,EAAC,aAFd;AAGE,YAAA,KAAK,EAAEA,KAHT;AAIE,YAAA,QAAQ,EAAGsB,CAAD,IAAOrB,QAAQ,CAACqB,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAsBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,UAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAEvB,QADR;AAEE,YAAA,WAAW,EAAC,gBAFd;AAGE,YAAA,KAAK,EAAEA,QAHT;AAIE,YAAA,QAAQ,EAAGkB,CAAD,IAAOjB,WAAW,CAACiB,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAiCE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,iBAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAErB,eADR;AAEE,YAAA,WAAW,EAAC,iBAFd;AAGE,YAAA,KAAK,EAAEA,eAHT;AAIE,YAAA,QAAQ,EAAGgB,CAAD,IAAOf,kBAAkB,CAACe,CAAC,CAACI,MAAF,CAASC,KAAV;AAJrC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF,eA2CE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAuDH,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAvDG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA4DD,CA3GD;;GAAM9B,O;UAOaR,W,EAEGC,W,EAIFA,W,EAGQA,W;;;KAhBtBO,O;AA6GN,eAAeA,OAAf","sourcesContent":["\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from '../components/Loader';\nimport { Message } from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { register,getUserDetails,updateUserProfile } from '../store/actions/userActions';\n\nconst Profile = ({location,history}) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector(state=>state.userDetails)\n  const {loading, error , user}= userDetails\n\n\n  const userLogin = useSelector(state=>state.userLogin)\n  const { userInfo}= userLogin\n\n  const userUpdateProfile = useSelector(state=>state.userUpdateProfile)\n  const { succ}= userUpdateProfile\n\n\nuseEffect(()=>{\nif(!userInfo){\n    history.push('/login') \n}else{\n    if(!user.name){\n      dispatch(getUserDetails('profile'))\n    }else{\n     setName(user.name)\n     setEmail(user.email)\n    }\n}\n\n},[dispatch,history,user])\n\n  const submitHandler = (e) => {\n  e.preventDefault()\n  if(password!== confirmPassword){\n      setMessage('Password do not match')\n  }else{\n      dispatch(updateUserProfile({\n          id:user._id,name,email,password\n      }))\n  }\n\n\n  };\n\n  return <Row>\n      <Col md={3}>\n      <h2>User profile</h2>\n      {message && <Message   >{message}</Message>}\n      {error && <Message   >{error}</Message>}\n      {loading && <Loader/>   }\n      <Form onSubmit={submitHandler}>\n\n      <Form.Group controlId='name'>\n          <Form.Label>name </Form.Label>\n          <Form.Control\n            type={name}\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type={email}\n            placeholder='Enter Email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password </Form.Label>\n          <Form.Control\n            type={password}\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n     \n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>confirmPassword </Form.Label>\n          <Form.Control\n            type={confirmPassword}\n            placeholder='confirmPassword'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Update\n        </Button>\n      </Form>\n\n      </Col>\n      <Col md={9}>\n      <h2>My Orders</h2>\n\n      </Col>\n  </Row>\n};\n\nexport default Profile;\n\n"]},"metadata":{},"sourceType":"module"}